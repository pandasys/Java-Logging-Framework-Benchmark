/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */
 
// Declare dependency versions
ext.log4j2Version = '2.11.0'
ext.logbackVersion = '1.2.3'
ext.disruptorVersion = '3.3.6'
ext.julToSlf4jVersion = '1.7.25'

apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'org.jetbrains.kotlin.jvm'

mainClassName = "com.loggly.frameworks.java.benchmark.Benchmark"

repositories {
    jcenter()
	mavenCentral()
	maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
}

buildscript {
	ext.kotlin_version = '1.2.61'

	repositories {
		jcenter()
		mavenCentral()
		maven {
			url 'https://maven.google.com/'
			name 'Google'
		}
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'
    
    // Project-specific dependencies    
    // Log4j 2
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2Version
  	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2Version
  	
  	// For Log4j2 Async Logging
  	compile group: 'com.lmax', name: 'disruptor', version: disruptorVersion
  	
  	// Logback
  	compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion

	compile 'com.ealva:ealvalog:0.02.00-SNAPSHOT'
	compile 'com.ealva:ealvalog-core:0.02.00-SNAPSHOT'
	compile 'com.ealva:ealvalog-jdk:0.02.00-SNAPSHOT'
	compile 'com.ealva:ealvalog-java:0.02.00-SNAPSHOT'
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.6"
		apiVersion = "1.2"
		languageVersion = "1.2"
	}
}

run {
	if (System.getProperty("exec.args") != null) {
		args System.getProperty("exec.args").split()
	}
}
